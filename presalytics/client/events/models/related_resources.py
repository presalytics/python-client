# coding: utf-8

"""
    Presalytics Events API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class RelatedResources(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'story_id': 'str',
        'user_id': 'str',
        'conversation_id': 'str',
        'team_id': 'str',
        'organization_id': 'str'
    }

    attribute_map = {
        'story_id': 'storyId',
        'user_id': 'userId',
        'conversation_id': 'conversationId',
        'team_id': 'teamId',
        'organization_id': 'organizationId'
    }

    def __init__(self, story_id=None, user_id=None, conversation_id=None, team_id=None, organization_id=None):  # noqa: E501
        """RelatedResources - a model defined in OpenAPI"""  # noqa: E501

        self._story_id = None
        self._user_id = None
        self._conversation_id = None
        self._team_id = None
        self._organization_id = None
        self.discriminator = None

        self.story_id = story_id
        self.user_id = user_id
        self.conversation_id = conversation_id
        self.team_id = team_id
        self.organization_id = organization_id

    @property
    def story_id(self):
        """Gets the story_id of this RelatedResources.  # noqa: E501


        :return: The story_id of this RelatedResources.  # noqa: E501
        :rtype: str
        """
        return self._story_id

    @story_id.setter
    def story_id(self, story_id):
        """Sets the story_id of this RelatedResources.


        :param story_id: The story_id of this RelatedResources.  # noqa: E501
        :type: str
        """

        self._story_id = story_id

    @property
    def user_id(self):
        """Gets the user_id of this RelatedResources.  # noqa: E501


        :return: The user_id of this RelatedResources.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this RelatedResources.


        :param user_id: The user_id of this RelatedResources.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def conversation_id(self):
        """Gets the conversation_id of this RelatedResources.  # noqa: E501


        :return: The conversation_id of this RelatedResources.  # noqa: E501
        :rtype: str
        """
        return self._conversation_id

    @conversation_id.setter
    def conversation_id(self, conversation_id):
        """Sets the conversation_id of this RelatedResources.


        :param conversation_id: The conversation_id of this RelatedResources.  # noqa: E501
        :type: str
        """

        self._conversation_id = conversation_id

    @property
    def team_id(self):
        """Gets the team_id of this RelatedResources.  # noqa: E501


        :return: The team_id of this RelatedResources.  # noqa: E501
        :rtype: str
        """
        return self._team_id

    @team_id.setter
    def team_id(self, team_id):
        """Sets the team_id of this RelatedResources.


        :param team_id: The team_id of this RelatedResources.  # noqa: E501
        :type: str
        """

        self._team_id = team_id

    @property
    def organization_id(self):
        """Gets the organization_id of this RelatedResources.  # noqa: E501


        :return: The organization_id of this RelatedResources.  # noqa: E501
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this RelatedResources.


        :param organization_id: The organization_id of this RelatedResources.  # noqa: E501
        :type: str
        """

        self._organization_id = organization_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RelatedResources):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
