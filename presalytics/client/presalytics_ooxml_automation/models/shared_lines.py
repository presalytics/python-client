# coding: utf-8

"""
    OOXML Automation

    This API helps users convert Excel and Powerpoint documents into rich, live dashboards and stories.  # noqa: E501

    The version of the OpenAPI document: 0.1.0-no-tags
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from presalytics.client.presalytics_ooxml_automation.configuration import Configuration


class SharedLines(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'connector_id': 'str',
        'shape_id': 'str',
        'dash_type_id': 'int',
        'head_end_type_id': 'int',
        'tail_end_type_id': 'int',
        'weight': 'int',
        'head_end_height_id': 'int',
        'head_end_width_id': 'int',
        'tail_end_height_id': 'int',
        'tail_end_width_id': 'int',
        'top_border_id': 'str',
        'bottom_border_id': 'str',
        'right_border_id': 'str',
        'left_border_id': 'str',
        't_lto_br_border_id': 'str',
        'b_lto_tr_border_id': 'str',
        'line_map_id': 'str',
        'id': 'str'
    }

    attribute_map = {
        'connector_id': 'connectorId',
        'shape_id': 'shapeId',
        'dash_type_id': 'dashTypeId',
        'head_end_type_id': 'headEndTypeId',
        'tail_end_type_id': 'tailEndTypeId',
        'weight': 'weight',
        'head_end_height_id': 'headEndHeightId',
        'head_end_width_id': 'headEndWidthId',
        'tail_end_height_id': 'tailEndHeightId',
        'tail_end_width_id': 'tailEndWidthId',
        'top_border_id': 'topBorderId',
        'bottom_border_id': 'bottomBorderId',
        'right_border_id': 'rightBorderId',
        'left_border_id': 'leftBorderId',
        't_lto_br_border_id': 'tLtoBRBorderId',
        'b_lto_tr_border_id': 'bLtoTRBorderId',
        'line_map_id': 'lineMapId',
        'id': 'id'
    }

    def __init__(self, connector_id=None, shape_id=None, dash_type_id=None, head_end_type_id=None, tail_end_type_id=None, weight=None, head_end_height_id=None, head_end_width_id=None, tail_end_height_id=None, tail_end_width_id=None, top_border_id=None, bottom_border_id=None, right_border_id=None, left_border_id=None, t_lto_br_border_id=None, b_lto_tr_border_id=None, line_map_id=None, id=None, local_vars_configuration=None):  # noqa: E501
        """SharedLines - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._connector_id = None
        self._shape_id = None
        self._dash_type_id = None
        self._head_end_type_id = None
        self._tail_end_type_id = None
        self._weight = None
        self._head_end_height_id = None
        self._head_end_width_id = None
        self._tail_end_height_id = None
        self._tail_end_width_id = None
        self._top_border_id = None
        self._bottom_border_id = None
        self._right_border_id = None
        self._left_border_id = None
        self._t_lto_br_border_id = None
        self._b_lto_tr_border_id = None
        self._line_map_id = None
        self._id = None
        self.discriminator = None

        self.connector_id = connector_id
        self.shape_id = shape_id
        if dash_type_id is not None:
            self.dash_type_id = dash_type_id
        if head_end_type_id is not None:
            self.head_end_type_id = head_end_type_id
        if tail_end_type_id is not None:
            self.tail_end_type_id = tail_end_type_id
        if weight is not None:
            self.weight = weight
        if head_end_height_id is not None:
            self.head_end_height_id = head_end_height_id
        if head_end_width_id is not None:
            self.head_end_width_id = head_end_width_id
        if tail_end_height_id is not None:
            self.tail_end_height_id = tail_end_height_id
        if tail_end_width_id is not None:
            self.tail_end_width_id = tail_end_width_id
        self.top_border_id = top_border_id
        self.bottom_border_id = bottom_border_id
        self.right_border_id = right_border_id
        self.left_border_id = left_border_id
        self.t_lto_br_border_id = t_lto_br_border_id
        self.b_lto_tr_border_id = b_lto_tr_border_id
        self.line_map_id = line_map_id
        if id is not None:
            self.id = id

    @property
    def connector_id(self):
        """Gets the connector_id of this SharedLines.  # noqa: E501


        :return: The connector_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._connector_id

    @connector_id.setter
    def connector_id(self, connector_id):
        """Sets the connector_id of this SharedLines.


        :param connector_id: The connector_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._connector_id = connector_id

    @property
    def shape_id(self):
        """Gets the shape_id of this SharedLines.  # noqa: E501


        :return: The shape_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._shape_id

    @shape_id.setter
    def shape_id(self, shape_id):
        """Sets the shape_id of this SharedLines.


        :param shape_id: The shape_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._shape_id = shape_id

    @property
    def dash_type_id(self):
        """Gets the dash_type_id of this SharedLines.  # noqa: E501


        :return: The dash_type_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._dash_type_id

    @dash_type_id.setter
    def dash_type_id(self, dash_type_id):
        """Sets the dash_type_id of this SharedLines.


        :param dash_type_id: The dash_type_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._dash_type_id = dash_type_id

    @property
    def head_end_type_id(self):
        """Gets the head_end_type_id of this SharedLines.  # noqa: E501


        :return: The head_end_type_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._head_end_type_id

    @head_end_type_id.setter
    def head_end_type_id(self, head_end_type_id):
        """Sets the head_end_type_id of this SharedLines.


        :param head_end_type_id: The head_end_type_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._head_end_type_id = head_end_type_id

    @property
    def tail_end_type_id(self):
        """Gets the tail_end_type_id of this SharedLines.  # noqa: E501


        :return: The tail_end_type_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._tail_end_type_id

    @tail_end_type_id.setter
    def tail_end_type_id(self, tail_end_type_id):
        """Sets the tail_end_type_id of this SharedLines.


        :param tail_end_type_id: The tail_end_type_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._tail_end_type_id = tail_end_type_id

    @property
    def weight(self):
        """Gets the weight of this SharedLines.  # noqa: E501


        :return: The weight of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this SharedLines.


        :param weight: The weight of this SharedLines.  # noqa: E501
        :type: int
        """

        self._weight = weight

    @property
    def head_end_height_id(self):
        """Gets the head_end_height_id of this SharedLines.  # noqa: E501


        :return: The head_end_height_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._head_end_height_id

    @head_end_height_id.setter
    def head_end_height_id(self, head_end_height_id):
        """Sets the head_end_height_id of this SharedLines.


        :param head_end_height_id: The head_end_height_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._head_end_height_id = head_end_height_id

    @property
    def head_end_width_id(self):
        """Gets the head_end_width_id of this SharedLines.  # noqa: E501


        :return: The head_end_width_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._head_end_width_id

    @head_end_width_id.setter
    def head_end_width_id(self, head_end_width_id):
        """Sets the head_end_width_id of this SharedLines.


        :param head_end_width_id: The head_end_width_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._head_end_width_id = head_end_width_id

    @property
    def tail_end_height_id(self):
        """Gets the tail_end_height_id of this SharedLines.  # noqa: E501


        :return: The tail_end_height_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._tail_end_height_id

    @tail_end_height_id.setter
    def tail_end_height_id(self, tail_end_height_id):
        """Sets the tail_end_height_id of this SharedLines.


        :param tail_end_height_id: The tail_end_height_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._tail_end_height_id = tail_end_height_id

    @property
    def tail_end_width_id(self):
        """Gets the tail_end_width_id of this SharedLines.  # noqa: E501


        :return: The tail_end_width_id of this SharedLines.  # noqa: E501
        :rtype: int
        """
        return self._tail_end_width_id

    @tail_end_width_id.setter
    def tail_end_width_id(self, tail_end_width_id):
        """Sets the tail_end_width_id of this SharedLines.


        :param tail_end_width_id: The tail_end_width_id of this SharedLines.  # noqa: E501
        :type: int
        """

        self._tail_end_width_id = tail_end_width_id

    @property
    def top_border_id(self):
        """Gets the top_border_id of this SharedLines.  # noqa: E501


        :return: The top_border_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._top_border_id

    @top_border_id.setter
    def top_border_id(self, top_border_id):
        """Sets the top_border_id of this SharedLines.


        :param top_border_id: The top_border_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._top_border_id = top_border_id

    @property
    def bottom_border_id(self):
        """Gets the bottom_border_id of this SharedLines.  # noqa: E501


        :return: The bottom_border_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._bottom_border_id

    @bottom_border_id.setter
    def bottom_border_id(self, bottom_border_id):
        """Sets the bottom_border_id of this SharedLines.


        :param bottom_border_id: The bottom_border_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._bottom_border_id = bottom_border_id

    @property
    def right_border_id(self):
        """Gets the right_border_id of this SharedLines.  # noqa: E501


        :return: The right_border_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._right_border_id

    @right_border_id.setter
    def right_border_id(self, right_border_id):
        """Sets the right_border_id of this SharedLines.


        :param right_border_id: The right_border_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._right_border_id = right_border_id

    @property
    def left_border_id(self):
        """Gets the left_border_id of this SharedLines.  # noqa: E501


        :return: The left_border_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._left_border_id

    @left_border_id.setter
    def left_border_id(self, left_border_id):
        """Sets the left_border_id of this SharedLines.


        :param left_border_id: The left_border_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._left_border_id = left_border_id

    @property
    def t_lto_br_border_id(self):
        """Gets the t_lto_br_border_id of this SharedLines.  # noqa: E501


        :return: The t_lto_br_border_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._t_lto_br_border_id

    @t_lto_br_border_id.setter
    def t_lto_br_border_id(self, t_lto_br_border_id):
        """Sets the t_lto_br_border_id of this SharedLines.


        :param t_lto_br_border_id: The t_lto_br_border_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._t_lto_br_border_id = t_lto_br_border_id

    @property
    def b_lto_tr_border_id(self):
        """Gets the b_lto_tr_border_id of this SharedLines.  # noqa: E501


        :return: The b_lto_tr_border_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._b_lto_tr_border_id

    @b_lto_tr_border_id.setter
    def b_lto_tr_border_id(self, b_lto_tr_border_id):
        """Sets the b_lto_tr_border_id of this SharedLines.


        :param b_lto_tr_border_id: The b_lto_tr_border_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._b_lto_tr_border_id = b_lto_tr_border_id

    @property
    def line_map_id(self):
        """Gets the line_map_id of this SharedLines.  # noqa: E501


        :return: The line_map_id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._line_map_id

    @line_map_id.setter
    def line_map_id(self, line_map_id):
        """Sets the line_map_id of this SharedLines.


        :param line_map_id: The line_map_id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._line_map_id = line_map_id

    @property
    def id(self):
        """Gets the id of this SharedLines.  # noqa: E501


        :return: The id of this SharedLines.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SharedLines.


        :param id: The id of this SharedLines.  # noqa: E501
        :type: str
        """

        self._id = id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SharedLines):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SharedLines):
            return True

        return self.to_dict() != other.to_dict()
